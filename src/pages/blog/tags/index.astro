---
// src/pages/tags/index.astro
import { getCollection } from "astro:content";
import BlogLayout from "../../../layouts/BaseLayout.astro";
import Header from "../../../components/Header.astro";
import Footer from "../../../components/Footer.astro";

// Get all blog posts and extract tags
const allPosts = await getCollection("blog", ({ data }) => {
  return data.draft !== true;
});

// Create tag statistics
const tagStats = {};
allPosts.forEach((post) => {
  post.data.tags?.forEach((tag) => {
    if (!tagStats[tag]) {
      tagStats[tag] = {
        name: tag,
        count: 0,
        posts: [],
      };
    }
    tagStats[tag].count++;
    tagStats[tag].posts.push(post);
  });
});

// Sort tags by count (descending) then alphabetically
const sortedTags = Object.values(tagStats).sort((a, b) => {
  if (b.count !== a.count) {
    return b.count - a.count;
  }
  return a.name.localeCompare(b.name);
});

// Get most popular and recent tags
const popularTags = sortedTags.slice(0, 6);
const totalPosts = allPosts.length;
const totalTags = sortedTags.length;
---

<BlogLayout
  title="Tags - Explore Topics"
  description="Browse all topics and tags from my blog. Discover articles about dentistry, programming, open source software, and healthcare technology."
>
  <Header />

  <main class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Page Header -->
    <header class="text-center mb-16">
      <h1
        class="text-4xl md:text-5xl font-bold text-slate-900 dark:text-white mb-6"
      >
        Explore <span
          class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent"
          >Topics</span
        >
      </h1>
      <p
        class="text-xl text-slate-600 dark:text-slate-300 max-w-3xl mx-auto leading-relaxed"
      >
        Discover articles organized by topics. From dentistry insights to
        programming tutorials, find exactly what interests you most.
      </p>
    </header>

    <!-- Stats Overview -->
    <div
      class="bg-white dark:bg-slate-900 rounded-2xl shadow-sm border border-slate-200 dark:border-slate-700 p-6 mb-12"
    >
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
        <div class="space-y-2">
          <div class="text-3xl font-bold text-blue-600 dark:text-blue-400">
            {totalTags}
          </div>
          <div class="text-slate-600 dark:text-slate-300 font-medium">
            Total Topics
          </div>
        </div>
        <div class="space-y-2">
          <div class="text-3xl font-bold text-purple-600 dark:text-purple-400">
            {totalPosts}
          </div>
          <div class="text-slate-600 dark:text-slate-300 font-medium">
            Articles Tagged
          </div>
        </div>
        <div class="space-y-2">
          <div class="text-3xl font-bold text-green-600 dark:text-green-400">
            {Math.round((totalPosts / totalTags) * 10) / 10}
          </div>
          <div class="text-slate-600 dark:text-slate-300 font-medium">
            Avg. Posts per Topic
          </div>
        </div>
      </div>
    </div>

    <!-- Popular Tags -->
    <section class="mb-16">
      <h2
        class="text-2xl font-bold text-slate-900 dark:text-white mb-8 flex items-center"
      >
        <svg
          class="w-6 h-6 mr-2 text-orange-500"
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path
            d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"
          ></path>
        </svg>
        Most Popular Topics
      </h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          popularTags.map((tag, index) => (
            <a
              href={`/tags/${tag.name.toLowerCase().replace(/\s+/g, "-")}`}
              class="group bg-white dark:bg-slate-900 rounded-2xl shadow-sm border border-slate-200 dark:border-slate-700 p-6 hover:shadow-lg hover:border-blue-300 dark:hover:border-blue-600 transition-all duration-200"
            >
              <div class="flex items-start justify-between mb-4">
                <div class="flex items-center">
                  <span class="text-2xl mr-3">
                    {index === 0
                      ? "üèÜ"
                      : index === 1
                        ? "ü•à"
                        : index === 2
                          ? "ü•â"
                          : "üìå"}
                  </span>
                  <div>
                    <h3 class="font-semibold text-slate-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                      {tag.name}
                    </h3>
                    <p class="text-sm text-slate-500 dark:text-slate-400">
                      {tag.count} article{tag.count !== 1 ? "s" : ""}
                    </p>
                  </div>
                </div>
                <svg
                  class="w-5 h-5 text-slate-400 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"
                  />
                </svg>
              </div>
              <div class="space-y-2">
                {tag.posts.slice(0, 2).map((post) => (
                  <div class="text-sm text-slate-600 dark:text-slate-300 truncate">
                    ‚Ä¢ {post.data.title}
                  </div>
                ))}
                {tag.count > 2 && (
                  <div class="text-sm text-slate-500 dark:text-slate-400 italic">
                    +{tag.count - 2} more article
                    {tag.count - 2 !== 1 ? "s" : ""}
                  </div>
                )}
              </div>
            </a>
          ))
        }
      </div>
    </section>

    <!-- All Tags -->
    <section>
      <h2
        class="text-2xl font-bold text-slate-900 dark:text-white mb-8 flex items-center"
      >
        <svg
          class="w-6 h-6 mr-2 text-blue-600"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"
          ></path>
        </svg>
        All Topics
      </h2>

      <!-- Tag Cloud -->
      <div
        class="bg-white dark:bg-slate-900 rounded-2xl shadow-sm border border-slate-200 dark:border-slate-700 p-8 mb-8"
      >
        <div class="flex flex-wrap gap-3">
          {
            sortedTags.map((tag) => {
              const size = Math.min(Math.max(tag.count, 1), 5);
              const sizeClasses = {
                1: "text-sm px-3 py-1.5",
                2: "text-base px-3 py-2",
                3: "text-lg px-4 py-2",
                4: "text-xl px-4 py-2.5",
                5: "text-2xl px-5 py-3",
              };

              return (
                <a
                  href={`/tags/${tag.name.toLowerCase().replace(/\s+/g, "-")}`}
                  class={`inline-flex items-center bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900/30 dark:to-purple-900/30 text-slate-700 dark:text-slate-300 hover:from-blue-200 hover:to-purple-200 dark:hover:from-blue-800/50 dark:hover:to-purple-800/50 rounded-full font-medium transition-all duration-200 transform hover:scale-105 ${sizeClasses[size]}`}
                >
                  {tag.name}
                  <span class="ml-2 bg-white dark:bg-slate-700 text-slate-600 dark:text-slate-300 text-xs rounded-full px-2 py-0.5 font-semibold">
                    {tag.count}
                  </span>
                </a>
              );
            })
          }
        </div>
      </div>

      <!-- Alphabetical List -->
      <div
        class="bg-white dark:bg-slate-900 rounded-2xl shadow-sm border border-slate-200 dark:border-slate-700 p-6"
      >
        <h3 class="text-lg font-semibold text-slate-900 dark:text-white mb-6">
          Alphabetical Index
        </h3>
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {
            sortedTags
              .sort((a, b) => a.name.localeCompare(b.name))
              .map((tag) => (
                <a
                  href={`/tags/${tag.name.toLowerCase().replace(/\s+/g, "-")}`}
                  class="group flex items-center justify-between p-3 hover:bg-slate-50 dark:hover:bg-slate-800 rounded-lg transition-colors duration-200"
                >
                  <span class="text-slate-700 dark:text-slate-300 group-hover:text-blue-600 dark:group-hover:text-blue-400 font-medium">
                    {tag.name}
                  </span>
                  <div class="flex items-center space-x-2">
                    <span class="text-sm text-slate-500 dark:text-slate-400">
                      {tag.count}
                    </span>
                    <svg
                      class="w-4 h-4 text-slate-400 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 5l7 7-7 7"
                      />
                    </svg>
                  </div>
                </a>
              ))
          }
        </div>
      </div>
    </section>
  </main>

  <Footer />
</BlogLayout>
